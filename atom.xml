<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xiao Luo</title>
  
  <subtitle>小罗的博客</subtitle>
  <link href="https://mrluo123.github.io/Mrluo123.http-github.io/atom.xml" rel="self"/>
  
  <link href="https://mrluo123.github.io/Mrluo123.http-github.io/"/>
  <updated>2022-11-20T19:27:53.892Z</updated>
  <id>https://mrluo123.github.io/Mrluo123.http-github.io/</id>
  
  <author>
    <name>Xiao Luo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>核工高清素材图(长期更新中)</title>
    <link href="https://mrluo123.github.io/Mrluo123.http-github.io/post/1b933ad6.html"/>
    <id>https://mrluo123.github.io/Mrluo123.http-github.io/post/1b933ad6.html</id>
    <published>2022-11-19T10:40:45.000Z</published>
    <updated>2022-11-20T19:27:53.892Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;img src=&quot;/Mrluo123.http-github.io/post/1b933ad6/reactor.gif&quot; class=&quot;&quot; width=&quot;800&quot; height=&quot;800&quot; title=&quot;石墨慢化反应堆示意图&quot;&gt;



&lt;img</summary>
        
      
    
    
    
    <category term="素材" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/categories/%E7%B4%A0%E6%9D%90/"/>
    
    
    <category term="素材" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/%E7%B4%A0%E6%9D%90/"/>
    
  </entry>
  
  <entry>
    <title>稀疏矩阵存储压缩技术简单介绍</title>
    <link href="https://mrluo123.github.io/Mrluo123.http-github.io/post/9ed8a6a7.html"/>
    <id>https://mrluo123.github.io/Mrluo123.http-github.io/post/9ed8a6a7.html</id>
    <published>2022-10-03T10:05:39.000Z</published>
    <updated>2022-11-20T19:29:30.217Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;什么是稀疏矩阵？&quot;&gt;&lt;a href=&quot;#什么是稀疏矩阵？&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="科学计算" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/categories/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="CUDA" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/CUDA/"/>
    
    <category term="稀疏矩阵" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5/"/>
    
    <category term="计算机" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>CUDA-ubuntu20安装教程</title>
    <link href="https://mrluo123.github.io/Mrluo123.http-github.io/post/199927a1.html"/>
    <id>https://mrluo123.github.io/Mrluo123.http-github.io/post/199927a1.html</id>
    <published>2022-09-30T05:56:14.000Z</published>
    <updated>2022-11-20T19:27:42.539Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;0-CUDA简介&quot;&gt;&lt;a href=&quot;#0-CUDA简介&quot; class=&quot;headerlink&quot; title=&quot;0. CUDA简介&quot;&gt;&lt;/a&gt;0. CUDA简介&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;CUDA（Compute Unified Device</summary>
        
      
    
    
    
    <category term="高性能计算" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/categories/%E9%AB%98%E6%80%A7%E8%83%BD%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="Linux" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/Linux/"/>
    
    <category term="CUDA" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/CUDA/"/>
    
    <category term="GPU" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/GPU/"/>
    
  </entry>
  
  <entry>
    <title>数字孪生技术学习</title>
    <link href="https://mrluo123.github.io/Mrluo123.http-github.io/post/d2feeb9b.html"/>
    <id>https://mrluo123.github.io/Mrluo123.http-github.io/post/d2feeb9b.html</id>
    <published>2022-08-28T12:23:03.375Z</published>
    <updated>2022-11-20T19:27:52.521Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;embed src=&quot;../pdf/White-paper-for-DT.pdf&quot; width=&quot;100%&quot; height=&quot;750&quot;</summary>
        
      
    
    
    
    <category term="数字孪生" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/categories/%E6%95%B0%E5%AD%97%E5%AD%AA%E7%94%9F/"/>
    
    
    <category term="数字孪生" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/%E6%95%B0%E5%AD%97%E5%AD%AA%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>超算作业提交：Slurm命令备忘录</title>
    <link href="https://mrluo123.github.io/Mrluo123.http-github.io/post/65958fd8.html"/>
    <id>https://mrluo123.github.io/Mrluo123.http-github.io/post/65958fd8.html</id>
    <published>2022-08-28T05:40:33.000Z</published>
    <updated>2022-11-20T19:26:40.989Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;0-常用术语&quot;&gt;&lt;a href=&quot;#0-常用术语&quot; class=&quot;headerlink&quot; title=&quot;0.常用术语&quot;&gt;&lt;/a&gt;0.常用术语&lt;/h2&gt;&lt;p&gt;user：用户名&lt;br&gt;node：计算节点&lt;br&gt;core：cpu 核&lt;br&gt;job：作业&lt;br&gt;job</summary>
        
      
    
    
    
    <category term="并行计算" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/categories/%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="集群作业" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/%E9%9B%86%E7%BE%A4%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>KMC平台基础软件配置方法一览</title>
    <link href="https://mrluo123.github.io/Mrluo123.http-github.io/post/63333.html"/>
    <id>https://mrluo123.github.io/Mrluo123.http-github.io/post/63333.html</id>
    <published>2022-07-21T05:15:27.000Z</published>
    <updated>2022-11-20T19:27:07.570Z</updated>
    
    
    <summary type="html">本文被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="数值反应堆" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/categories/%E6%95%B0%E5%80%BC%E5%8F%8D%E5%BA%94%E5%A0%86/"/>
    
    
    <category term="Linux" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/Linux/"/>
    
    <category term="SALOME" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/SALOME/"/>
    
    <category term="多尺度多物理耦合" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/%E5%A4%9A%E5%B0%BA%E5%BA%A6%E5%A4%9A%E7%89%A9%E7%90%86%E8%80%A6%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>在Windows和Linux下如何配置MPI</title>
    <link href="https://mrluo123.github.io/Mrluo123.http-github.io/post/21781.html"/>
    <id>https://mrluo123.github.io/Mrluo123.http-github.io/post/21781.html</id>
    <published>2022-07-19T02:18:10.000Z</published>
    <updated>2022-11-20T19:27:46.792Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;在Windows和Linux下如何配置MPI&quot;&gt;&lt;a href=&quot;#在Windows和Linux下如何配置MPI&quot; class=&quot;headerlink&quot; title=&quot;在Windows和Linux下如何配置MPI&quot;&gt;&lt;/a&gt;在Windows和Linux下如何配置MPI&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;MPI（英语：Message Passing Interface，缩写MPI）是一个跨语言的通讯协议，用于编写并行计算机。支持点对点和广播。MPI是一个信息传递应用程序接口，包括协议和和语义说明，他们指明其如何在各种实现中发挥其特性。&lt;strong&gt;MPI&lt;strong&gt;&lt;strong&gt;的目标是高性能，大规模性，和可移植性。当下MPI&lt;/strong&gt;&lt;/strong&gt;仍为高性能计算的主要模型&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在WIndows下和Linux下配置MPI的方法有所不同，本文将详细讲述如何在这两个操作系统下安装MPI并配置和运行一个简单的C++实例。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="并行计算" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/categories/%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="MPI" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/MPI/"/>
    
  </entry>
  
  <entry>
    <title>如何安装win11+ubuntu双系统</title>
    <link href="https://mrluo123.github.io/Mrluo123.http-github.io/post/3709.html"/>
    <id>https://mrluo123.github.io/Mrluo123.http-github.io/post/3709.html</id>
    <published>2022-06-25T11:30:03.000Z</published>
    <updated>2022-11-20T19:26:44.211Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Windows11-x2F-10安装Ubuntu-20-04-6-LTS双系统&quot;&gt;&lt;a href=&quot;#Windows11-x2F-10安装Ubuntu-20-04-6-LTS双系统&quot; class=&quot;headerlink&quot; title=&quot;Windows11/10安装Ubuntu 20.04.6 LTS双系统&quot;&gt;&lt;/a&gt;Windows11/10安装Ubuntu 20.04.6 LTS双系统&lt;/h1&gt;</summary>
    
    
    
    <category term="Ubuntu" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/categories/Ubuntu/"/>
    
    
    <category term="Ubuntu" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/Ubuntu/"/>
    
    <category term="双系统" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/%E5%8F%8C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>使用OpenMP进行C++并行编程的一些心得</title>
    <link href="https://mrluo123.github.io/Mrluo123.http-github.io/post/11326.html"/>
    <id>https://mrluo123.github.io/Mrluo123.http-github.io/post/11326.html</id>
    <published>2021-12-09T12:00:37.000Z</published>
    <updated>2022-11-20T19:27:49.986Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近在编程时，由于涉及到大量for循环等遍历计算，需要了解并行编程知识，于是看了下OpenMP的相关教程；&lt;/p&gt;</summary>
    
    
    
    <category term="并行计算" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/categories/%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="OpenMP" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/OpenMP/"/>
    
    <category term="C++" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>关于C++函数引用传递的一些心得</title>
    <link href="https://mrluo123.github.io/Mrluo123.http-github.io/post/621.html"/>
    <id>https://mrluo123.github.io/Mrluo123.http-github.io/post/621.html</id>
    <published>2021-12-08T11:56:57.000Z</published>
    <updated>2022-11-20T19:27:51.292Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近在看别人的程序的时候，了解到一种新的函数写法。&lt;br&gt;通常，我么在使用通常来讲，函数通过形参接收实参的数值，并返回相应的结果，这种方式我么成为“&lt;em&gt;&lt;strong&gt;按值传递&lt;/strong&gt;&lt;/em&gt;”（pass-by-value）,这种传递方法并不会修改原始数值本身。&lt;/p&gt;</summary>
    
    
    
    <category term="C++" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/categories/C/"/>
    
    
    <category term="引用传递" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92/"/>
    
  </entry>
  
  <entry>
    <title>虚拟机安装Debian以及配置SALOME教程</title>
    <link href="https://mrluo123.github.io/Mrluo123.http-github.io/post/23422.html"/>
    <id>https://mrluo123.github.io/Mrluo123.http-github.io/post/23422.html</id>
    <published>2021-12-07T14:01:42.000Z</published>
    <updated>2022-11-20T19:27:56.429Z</updated>
    
    
    <summary type="html">本文被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="Ubuntu" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/categories/Ubuntu/"/>
    
    
    <category term="Linux" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/Linux/"/>
    
    <category term="SALOME" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/SALOME/"/>
    
    <category term="虚拟机" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>一个例子告诉你C++引用和指针的区别</title>
    <link href="https://mrluo123.github.io/Mrluo123.http-github.io/post/36765.html"/>
    <id>https://mrluo123.github.io/Mrluo123.http-github.io/post/36765.html</id>
    <published>2021-12-07T11:54:56.000Z</published>
    <updated>2022-11-20T19:26:49.041Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;C-引用vs指针&quot;&gt;&lt;a href=&quot;#C-引用vs指针&quot; class=&quot;headerlink&quot; title=&quot;C++引用vs指针&quot;&gt;&lt;/a&gt;C++引用vs指针&lt;/h4&gt;&lt;p&gt;引用很容易和指针混淆，他们之间有三个主要的不同：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不存在空引用。引用必须连接到一块合法的内存。&lt;/li&gt;
&lt;li&gt;一旦引用被初始化为一个对象，就不能被指向到另一个对象。指针可以在任何时候指向到另一个对象。&lt;/li&gt;
&lt;li&gt;引用必须在创建时被初始化。指针可以在任何时间被初始化。&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="C++" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/categories/C/"/>
    
    
    <category term="C++" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++用流函数进行格式化输出</title>
    <link href="https://mrluo123.github.io/Mrluo123.http-github.io/post/3482.html"/>
    <id>https://mrluo123.github.io/Mrluo123.http-github.io/post/3482.html</id>
    <published>2021-12-06T11:59:03.000Z</published>
    <updated>2022-11-20T19:27:48.154Z</updated>
    
    
    <summary type="html">&lt;p&gt;调试的时候，输出友好的话，可以有效的提高调试的效率，因此，在这里整理一下，一些格式化输出的常见方法。&lt;/p&gt;</summary>
    
    
    
    <category term="C++" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/categories/C/"/>
    
    
    <category term="格式化输出" scheme="https://mrluo123.github.io/Mrluo123.http-github.io/tags/%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/"/>
    
  </entry>
  
</feed>
